import { QuestService } from './quest.service';
export declare class QuestController {
    private readonly questService;
    constructor(questService: QuestService);
    findAll(req: any): Promise<{
        data: {
            id: number;
            type: string;
            kind: string;
            status: boolean;
            date_start: Date;
            score: number;
            completed: boolean;
            extra: {
                kind: string;
                id: number;
                kind_spotify: string;
                to_listen: boolean;
                uid: string;
                uri: string;
                name: string;
                question?: undefined;
                kind_youtube?: undefined;
                url?: undefined;
                item_id?: undefined;
                launch_in?: undefined;
                name_artist?: undefined;
                name_product?: undefined;
                description?: undefined;
                completed?: undefined;
                cover_url?: undefined;
                points_for_question?: undefined;
                points_for_question_2?: undefined;
                points_for_track?: undefined;
                question_2?: undefined;
                songs_heard?: undefined;
                tracks_count?: undefined;
            } | {
                kind: string;
                id: number;
                question: string;
                kind_spotify?: undefined;
                to_listen?: undefined;
                uid?: undefined;
                uri?: undefined;
                name?: undefined;
                kind_youtube?: undefined;
                url?: undefined;
                item_id?: undefined;
                launch_in?: undefined;
                name_artist?: undefined;
                name_product?: undefined;
                description?: undefined;
                completed?: undefined;
                cover_url?: undefined;
                points_for_question?: undefined;
                points_for_question_2?: undefined;
                points_for_track?: undefined;
                question_2?: undefined;
                songs_heard?: undefined;
                tracks_count?: undefined;
            } | {
                kind: string;
                id: number;
                kind_youtube: string;
                name: string;
                url: string;
                item_id: string;
                kind_spotify?: undefined;
                to_listen?: undefined;
                uid?: undefined;
                uri?: undefined;
                question?: undefined;
                launch_in?: undefined;
                name_artist?: undefined;
                name_product?: undefined;
                description?: undefined;
                completed?: undefined;
                cover_url?: undefined;
                points_for_question?: undefined;
                points_for_question_2?: undefined;
                points_for_track?: undefined;
                question_2?: undefined;
                songs_heard?: undefined;
                tracks_count?: undefined;
            } | {
                kind: string;
                id: number;
                launch_in: Date;
                name_artist: string;
                name_product: string;
                uri: string;
                kind_spotify?: undefined;
                to_listen?: undefined;
                uid?: undefined;
                name?: undefined;
                question?: undefined;
                kind_youtube?: undefined;
                url?: undefined;
                item_id?: undefined;
                description?: undefined;
                completed?: undefined;
                cover_url?: undefined;
                points_for_question?: undefined;
                points_for_question_2?: undefined;
                points_for_track?: undefined;
                question_2?: undefined;
                songs_heard?: undefined;
                tracks_count?: undefined;
            } | {
                kind: string;
                id: number;
                description: string;
                kind_spotify?: undefined;
                to_listen?: undefined;
                uid?: undefined;
                uri?: undefined;
                name?: undefined;
                question?: undefined;
                kind_youtube?: undefined;
                url?: undefined;
                item_id?: undefined;
                launch_in?: undefined;
                name_artist?: undefined;
                name_product?: undefined;
                completed?: undefined;
                cover_url?: undefined;
                points_for_question?: undefined;
                points_for_question_2?: undefined;
                points_for_track?: undefined;
                question_2?: undefined;
                songs_heard?: undefined;
                tracks_count?: undefined;
            } | {
                kind: string;
                id: number;
                completed: boolean;
                cover_url: string;
                name: string;
                points_for_question: number;
                points_for_question_2: number;
                points_for_track: number;
                question: string;
                question_2: string;
                songs_heard: number;
                tracks_count: number;
                uri: string;
                kind_spotify?: undefined;
                to_listen?: undefined;
                uid?: undefined;
                kind_youtube?: undefined;
                url?: undefined;
                item_id?: undefined;
                launch_in?: undefined;
                name_artist?: undefined;
                name_product?: undefined;
                description?: undefined;
            };
        }[];
        size: number;
        links: {
            self: string;
            first: string;
            prev: string;
            next: string;
            last: string;
        };
    }>;
    update(req: any, res: any, id: number, body: any): Promise<any>;
}
